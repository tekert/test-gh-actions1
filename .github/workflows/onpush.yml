# (onpush -> build) -> release
name: onPush

###
#  Builds native executables for [linux,windows,mac] when a semantic release tag is pushed.
#  Renames the output files based on OS and uploads each one (3) for release.
#  Finally deletes temporary artifacts
#    release.yml is automatically called when this finishes.


# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
#run-name: "Build: [on ${{ github.ref_type }}: ${{ inputs.buildref == '' && github.ref_name || inputs.buildref }}]"
run-name: "Build: [on ${{ github.ref_type }}: ${{ inputs.buildref || github.ref_name }}]"

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

  # For testing purposes (manually fire a tag event, target sets a ref to build)
  workflow_dispatch:
    inputs:
      buildref:
        description: "'--last-release' (use the last release) | '<ref>' (commit/tag/branch) | '' (use selected <ref>)"
        required: false
        type: string

jobs:

  build1:
    uses: ./.github/workflows/build.yml
    with:
      target: ${{ inputs.buildref }}
    secrets: inherit

  build2:
    needs: [build1]
    if: needs.build1.result == 'success'

    runs-on:  ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Set github envs for debug
        run: echo 'Set github envs for debug' #'${{ toJSON(needs) }}'
        env:
          GITHUB_JSON: ${{ toJSON(github) }}
          NEEDS_JSON: ${{ toJSON(needs) }}
          ENV_JSON: ${{ toJSON(env) }}
          INPUTS_JSON: ${{ toJSON(inputs) }}
        working-directory: "."

      - name: Display structure of downloaded files
        run: ls -R

      # Download artifact
      - name: "Download build artifacts"
        uses: actions/download-artifact@v3
        with:
          name: native-executables

      - name: Display structure of downloaded files
        run: ls -R

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # https://github.com/actions/checkout
      - name: "Checkout local repository"
        uses: actions/checkout@v3

      - uses: actions/upload-artifact@v3
        with:
          name: test
          path: README.md
